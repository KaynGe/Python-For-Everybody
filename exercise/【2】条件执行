1.数的性质
一些数字可能拥有以下的性质：
性质 1：是偶数；
性质 2：大于 4 且不大于 12。

输入：
输入一个数字 x(0≤x≤1000)

输出：
如果两个性质同时满足，则输出2；只满足一个性质输出1，都不满足输出0.

输入样例：
12

输出样例：
2


2.闰年判断
输入一个年份，判断这一年是否是闰年，如果是输出 1，否则输出 0。

输入样例1： 1926
输出样例1： 0

输入样例2： 1900
输出样例2： 0

输入样例3： 2000
输出样例3： 1

输入样例4： 1996
输出样例4： 1

3.Apples
八尾勇喜欢吃苹果。她今天吃掉了x(0≤x≤100) 个苹果。英语课上学到了 apple 这个词语，想用它来造句。
如果她吃了 1 个苹果，就输出 Today, I ate 1 apple.；
如果她没有吃，那么就把 1 换成 0；
如果她吃了不止一个苹果，别忘了 apple 这个单词后面要加上代表复数的 s。
你能帮她完成这个句子吗？

输入样例1： 1
输出样例1： Today, I ate 1 apple.

输入样例2： 3
输出样例2： Today, I ate 3 apples.

4.BMI指数
BMI指数是国际上常用的衡量人体胖瘦程度的一个标准，其算法是 m/h^2(40≤m≤120,1.4≤h≤2.0)，
其中m是指体重（千克），h是指身高（米）。不同体型范围与判定结果如下：
小于18.5：体重过轻，输出 Underweight；
大于等于18.5 且小于24：正常体重，输出Normal；
大于等于24：肥胖，输出Overweight；
现在给出体重和身高数据，需要根据 BMI 指数判断体型状态并输出对应的判断。

输入样例：
70
1.72

输出样例：
Normal

5.月份天数
输入年份和月份，输出这一年的这一月有多少天。需要考虑闰年。

输入样例1： 
1926
8
输出样例1： 
31

输入样例2： 
2000
2
输出样例2： 
29

6. 柠檬水找零 （leetcode 860）
在柠檬水摊上，每一杯柠檬水的售价为 5 美元。
顾客排队购买你的产品，（按账单 bills 支付的顺序）一次购买一杯。
每位顾客只买一杯柠檬水，然后向你付 5 美元、10 美元或 20 美元。你必须给每个顾客正确找零，也就是说净交易是每位顾客向你支付 5 美元。
注意，一开始你手头没有任何零钱。
如果你能给每位顾客正确找零，返回 true ，否则返回 false 。

示例 1：
输入：[5,5,5,10,20]
输出：true
解释：
前 3 位顾客那里，我们按顺序收取 3 张 5 美元的钞票。
第 4 位顾客那里，我们收取一张 10 美元的钞票，并返还 5 美元。
第 5 位顾客那里，我们找还一张 10 美元的钞票和一张 5 美元的钞票。
由于所有客户都得到了正确的找零，所以我们输出 true。

示例 2：
输入：[5,5,10]
输出：true

示例 3：
输入：[10,10]
输出：false

示例 4：
输入：[5,5,10,10,20]
输出：false
解释：
前 2 位顾客那里，我们按顺序收取 2 张 5 美元的钞票。
对于接下来的 2 位顾客，我们收取一张 10 美元的钞票，然后返还 5 美元。
对于最后一位顾客，我们无法退回 15 美元，因为我们现在只有两张 10 美元的钞票。
由于不是每位顾客都得到了正确的找零，所以答案是 false。

answer：
6. 柠檬水找零
class Solution:
    def lemonadeChange(self, bills: List[int]) -> bool:
        five, ten, twenty = 0, 0, 0
        for bill in bills:
            if bill == 5: 
                five += 1
            elif bill == 10:
                if five > 0:
                    five -= 1; ten += 1
                else:
                    return False
            else:
                if ten > 0 and five > 0:
                    ten -= 1; five -= 1
                elif five >= 3:
                    five -= 3
                else:
                    return False
        return True
