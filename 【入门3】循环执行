1.找最小值
给出n和n个整数a(a大于等于0且小于等于1000)，求这n个整数的最小值。

输入样例：
6
1
9
2
6
0
8

输出样例：
0

2.阶乘之和
计算出S=1!+2!+3!+…+n!(n≤50)
其中“!”表示阶乘，例如：5!=5×4×3×2×1。

输入格式：
一个正整数n

输出格式：
一个正整数，表示计算结果

输入样例：
3

输出样例：
9

3.分类平均
给定 n(n≤10000)和k(k≤100)，将从1到n之间的所有正整数可以分为两类：
A 类数可以被k整除（也就是说是k的倍数），而B类数不能。请输出这两类数的平均数

输入样例：
100
16

输出样例：
56.0
50.1

4.一尺之锤
《庄子》中说到，“一尺之棰，日取其半，万世不竭”。第一天有一根长度为a的木棍，从第二天
开始，每天都要将这根木棍锯掉一半（每次除 2，向下取整）。第几天的时候木棍会变为1？

输入样例：
100

输出样例：
7




参考代码：
1.找最小值
n = eval(input())
minValue = None
for i in range(n):
    a = eval(input())
    if minValue == None:
        minValue = a
    elif a < minValue:
        minValue = a
print(minValue)


2.阶乘之和
n = eval(input())
sum = 0
tmp = 1
for i in range(1, n + 1):
    tmp *= i
    sum += tmp
print(sum)

3.分类平均
n = eval(input())
k = eval(input())
sum1, count1 = 0, 0
sum2, count2 = 0, 0
for i in range(1, n + 1):
    if i % k == 0:
        sum1 += i
        count1 += 1
    else:
        sum2 += i
        count2 += 1
print(round(sum1 / count1, 1))
print(round(sum2 / count2, 1))

4.一尺之锤
a = eval(input())
count = 1
while a != 1:
    a //= 2
    count += 1
print(count)
